// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SFIDWebAPI.Infrastructure.Persistences;

namespace SFIDWebAPI.Infrastructure.Persistences.Migrations
{
    [DbContext(typeof(SFDDbContext))]
    [Migration("20200115164301_InitialMigrations")]
    partial class InitialMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.AccessToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthToken")
                        .IsRequired()
                        .HasColumnName("AuthToken")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnName("ExpiresAt")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("Type")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("UserId")
                        .HasColumnName("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SFDAccessToken");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.AdditionalInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnName("ExpiresAt")
                        .HasColumnType("datetime");

                    b.Property<string>("FileCode")
                        .IsRequired()
                        .HasColumnName("FileCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnName("FileType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ImageCoverId")
                        .HasColumnName("ImageCoverId")
                        .HasColumnType("int");

                    b.Property<int>("ImageThumbnailId")
                        .HasColumnName("ImageThumbnailId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnName("Link")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnName("PublishedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("Title")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("TotalViews")
                        .HasColumnName("TotalViews")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageCoverId");

                    b.HasIndex("ImageThumbnailId");

                    b.ToTable("SFDAdditionalInfo");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Password")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("RoleId")
                        .HasColumnName("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("SFDAdmin");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.AdminToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdminId")
                        .HasColumnName("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("AuthToken")
                        .IsRequired()
                        .HasColumnName("AuthToken")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnName("ExpiresAt")
                        .HasColumnType("datetime2")
                        .HasMaxLength(50);

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("Type")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("SFDAdminToken");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.Bulletin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnName("ExpiresAt")
                        .HasColumnType("datetime");

                    b.Property<string>("FileCode")
                        .IsRequired()
                        .HasColumnName("FileCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnName("FileType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ImageCoverId")
                        .HasColumnName("ImageCoverId")
                        .HasColumnType("int");

                    b.Property<int>("ImageThumbnailId")
                        .HasColumnName("ImageThumbnailId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnName("Link")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnName("PublishedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("Title")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("TotalViews")
                        .HasColumnName("TotalViews")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageCoverId");

                    b.HasIndex("ImageThumbnailId");

                    b.ToTable("SFDBulletin");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.Faq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnName("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnName("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("SFDFaq");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.GuideCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ImageCoverId")
                        .HasColumnName("ImageCoverId")
                        .HasColumnType("int");

                    b.Property<int>("ImageLogoId")
                        .HasColumnName("ImageLogoId")
                        .HasColumnType("int");

                    b.Property<int>("ImageThumbnailId")
                        .HasColumnName("ImageThumbnailId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnName("Tag")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ImageCoverId");

                    b.HasIndex("ImageLogoId");

                    b.HasIndex("ImageThumbnailId");

                    b.ToTable("SFDGuideCategory");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.GuideMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnName("ExpiresAt")
                        .HasColumnType("datetime");

                    b.Property<string>("FileCode")
                        .HasColumnName("FileCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FileType")
                        .HasColumnName("FileType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("GuideCategoryId")
                        .HasColumnName("SFDGuideCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ImageCoverId")
                        .HasColumnName("ImageCoverId")
                        .HasColumnType("int");

                    b.Property<int>("ImageThumbnailId")
                        .HasColumnName("ImageThumbnailId")
                        .HasColumnType("int");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnName("Link")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnName("PublishedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("Title")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("TotalViews")
                        .HasColumnName("TotalViews")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GuideCategoryId");

                    b.HasIndex("ImageCoverId");

                    b.HasIndex("ImageThumbnailId");

                    b.ToTable("SFDGuideMaterial");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.HomeBanner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnName("ExpiresAt")
                        .HasColumnType("datetime");

                    b.Property<int>("ImageId")
                        .HasColumnName("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnName("PublishedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("SFDHomeBanner");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.ImageGallery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnName("Category")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnName("Link")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("SFDImageGallery");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.MasterConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnName("Category")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Sequence")
                        .HasColumnName("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("ValueCode")
                        .IsRequired()
                        .HasColumnName("ValueCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueDesc")
                        .IsRequired()
                        .HasColumnName("ValueDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueId")
                        .IsRequired()
                        .HasColumnName("ValueId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SFDMasterConfig");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("MenuTypeId")
                        .HasColumnName("SFDMenuTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("MenuTypeId");

                    b.ToTable("SFDMenu");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.MenuType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("SFDMenuType");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attachment")
                        .HasColumnName("Attachment")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnName("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeletable")
                        .HasColumnName("IsDeletable")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnName("OwnerId")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OwnerType")
                        .IsRequired()
                        .HasColumnName("OwnerType")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50)
                        .HasDefaultValue("unread");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("Title")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("SFDNotification");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.NotificationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("HasRead")
                        .HasColumnName("HasRead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("NotificationId")
                        .HasColumnName("NotificationId")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UserId")
                        .HasColumnName("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId")
                        .IsUnique();

                    b.ToTable("SFDNotificationStatus");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.OTP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnName("ExpiresAt")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnName("PIN")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("RowStatus")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SFDOTP");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.PKTHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnName("Image")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastUpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RowStatus")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("int")
                        .HasMaxLength(50);

                    b.Property<string>("Vin")
                        .HasColumnName("Vin")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("SFDPKTHistory");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("MenuId")
                        .HasColumnName("SFDMenuID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("RoleId")
                        .HasColumnName("SFDRoleID")
                        .HasColumnType("int");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("SFDPermission");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.Recommendation", b =>
                {
                    b.Property<int>("ContentId")
                        .HasColumnName("ContentId")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .HasColumnName("ContentType")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnName("ExpiresAt")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnName("PublishedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("RowStatus")
                        .HasColumnType("int");

                    b.HasKey("ContentId", "ContentType");

                    b.ToTable("SFDRecommendation");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("MasterConfigId")
                        .HasColumnName("SFDMCID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("MasterConfigId");

                    b.ToTable("SFDRole");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.Salesman", b =>
                {
                    b.Property<string>("SalesmanCode")
                        .HasColumnName("SalesmanCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DealerArea")
                        .HasColumnName("DealerArea")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DealerBranchCode")
                        .HasColumnName("DealerBranchCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DealerBranchName")
                        .HasColumnName("DealerBranchName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DealerCity")
                        .HasColumnName("DealerCity")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DealerCode")
                        .HasColumnName("DealerCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DealerGroup")
                        .HasColumnName("DealerGroup")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DealerName")
                        .HasColumnName("DealerName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("JobDescription")
                        .HasColumnName("JobDescription")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnName("LastUpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("LevelDescription")
                        .HasColumnName("LevelDescription")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SalesmanEmail")
                        .HasColumnName("SalesmanEmail")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SalesmanHandphone")
                        .HasColumnName("SalesmanHandphone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("SalesmanHireDate")
                        .HasColumnName("SalesmanHireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SalesmanName")
                        .HasColumnName("SalesmanName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SalesmanStatus")
                        .HasColumnName("SalesmanStatus")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SalesmanTeamCategory")
                        .HasColumnName("SalesmanTeamCategory")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SuperiorCode")
                        .HasColumnName("SuperiorCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SuperiorName")
                        .HasColumnName("SuperiorName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("SalesmanCode");

                    b.ToTable("VWI_SFDMobileSalesman");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.StaticContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppInfo")
                        .HasColumnName("AppInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disclaimer")
                        .HasColumnName("Disclaimer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrivacyPolicy")
                        .HasColumnName("PrivacyPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowStatus")
                        .HasColumnType("int");

                    b.Property<string>("TermCondition")
                        .HasColumnName("TermCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tutorial")
                        .HasColumnName("Tutorial")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SFDStaticContent");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.TrainingCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ImageCoverId")
                        .HasColumnName("ImageCoverId")
                        .HasColumnType("int");

                    b.Property<int>("ImageLogoId")
                        .HasColumnName("ImageLogoId")
                        .HasColumnType("int");

                    b.Property<int>("ImageThumbnailId")
                        .HasColumnName("ImageThumbnailId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnName("Tag")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("ImageCoverId");

                    b.HasIndex("ImageLogoId");

                    b.HasIndex("ImageThumbnailId");

                    b.ToTable("SFDTrainingCategory");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.TrainingMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnName("ExpiresAt")
                        .HasColumnType("datetime");

                    b.Property<string>("FileCode")
                        .HasColumnName("FileCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FileType")
                        .HasColumnName("FileType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ImageCoverId")
                        .HasColumnName("ImageCoverId")
                        .HasColumnType("int");

                    b.Property<int>("ImageThumbnailId")
                        .HasColumnName("ImageThumbnailId")
                        .HasColumnType("int");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnName("Link")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnName("PublishedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("Title")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("TotalViews")
                        .HasColumnName("TotalViews")
                        .HasColumnType("int");

                    b.Property<int>("TrainingCategoryId")
                        .HasColumnName("SFDTrainingCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageCoverId");

                    b.HasIndex("ImageThumbnailId");

                    b.HasIndex("TrainingCategoryId");

                    b.ToTable("SFDTrainingMaterial");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CreateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasColumnName("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirebaseToken")
                        .HasColumnName("FirebaseToken")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnName("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnName("LastUpdateBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnName("LastUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("LoginThrottle")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LoginThrottle")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("MasterConfigId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Password")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("Phone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProfilePhoto")
                        .HasColumnName("ProfilePhoto")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("RowStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RowStatus")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("Username")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("MasterConfigId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("SFDUser");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.AccessToken", b =>
                {
                    b.HasOne("SFIDWebAPI.Domain.Entities.User", "User")
                        .WithMany("AccessTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.AdditionalInfo", b =>
                {
                    b.HasOne("SFIDWebAPI.Domain.Entities.ImageGallery", "ImageCover")
                        .WithMany("AdditionalInfoImageCovers")
                        .HasForeignKey("ImageCoverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SFIDWebAPI.Domain.Entities.ImageGallery", "ImageThumbnail")
                        .WithMany("AdditionalInfoImageThumbnails")
                        .HasForeignKey("ImageThumbnailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.Admin", b =>
                {
                    b.HasOne("SFIDWebAPI.Domain.Entities.Role", "Role")
                        .WithMany("Admins")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.AdminToken", b =>
                {
                    b.HasOne("SFIDWebAPI.Domain.Entities.Admin", "Admin")
                        .WithMany("AdminTokens")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.Bulletin", b =>
                {
                    b.HasOne("SFIDWebAPI.Domain.Entities.ImageGallery", "ImageCover")
                        .WithMany("BulletinInfoImageCovers")
                        .HasForeignKey("ImageCoverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SFIDWebAPI.Domain.Entities.ImageGallery", "ImageThumbnail")
                        .WithMany("BulletinInfoImageThumbnails")
                        .HasForeignKey("ImageThumbnailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.GuideCategory", b =>
                {
                    b.HasOne("SFIDWebAPI.Domain.Entities.ImageGallery", "ImageCover")
                        .WithMany("GuideCategoryImageCovers")
                        .HasForeignKey("ImageCoverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SFIDWebAPI.Domain.Entities.ImageGallery", "ImageLogo")
                        .WithMany("GuideCategoryImageLogos")
                        .HasForeignKey("ImageLogoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SFIDWebAPI.Domain.Entities.ImageGallery", "ImageThumbnail")
                        .WithMany("GuideCategoryImageThumbnails")
                        .HasForeignKey("ImageThumbnailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.GuideMaterial", b =>
                {
                    b.HasOne("SFIDWebAPI.Domain.Entities.GuideCategory", "GuideCategory")
                        .WithMany("GuideMaterials")
                        .HasForeignKey("GuideCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SFIDWebAPI.Domain.Entities.ImageGallery", "ImageCover")
                        .WithMany("GuideMaterialImageCovers")
                        .HasForeignKey("ImageCoverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SFIDWebAPI.Domain.Entities.ImageGallery", "ImageThumbnail")
                        .WithMany("GuideMaterialImageThumbnails")
                        .HasForeignKey("ImageThumbnailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.HomeBanner", b =>
                {
                    b.HasOne("SFIDWebAPI.Domain.Entities.ImageGallery", "Image")
                        .WithMany("HomeBannerImages")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.Menu", b =>
                {
                    b.HasOne("SFIDWebAPI.Domain.Entities.MenuType", "MenuType")
                        .WithMany("Menus")
                        .HasForeignKey("MenuTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.NotificationStatus", b =>
                {
                    b.HasOne("SFIDWebAPI.Domain.Entities.Notification", "Notification")
                        .WithOne("NotificationStatus")
                        .HasForeignKey("SFIDWebAPI.Domain.Entities.NotificationStatus", "NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.OTP", b =>
                {
                    b.HasOne("SFIDWebAPI.Domain.Entities.User", "User")
                        .WithMany("OTPs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.Permission", b =>
                {
                    b.HasOne("SFIDWebAPI.Domain.Entities.Menu", "Menu")
                        .WithMany("Permissions")
                        .HasForeignKey("MenuId");

                    b.HasOne("SFIDWebAPI.Domain.Entities.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.Role", b =>
                {
                    b.HasOne("SFIDWebAPI.Domain.Entities.MasterConfig", "MasterConfig")
                        .WithMany("Roles")
                        .HasForeignKey("MasterConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.TrainingCategory", b =>
                {
                    b.HasOne("SFIDWebAPI.Domain.Entities.ImageGallery", "ImageCover")
                        .WithMany("TrainingCategoryImageCovers")
                        .HasForeignKey("ImageCoverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SFIDWebAPI.Domain.Entities.ImageGallery", "ImageLogo")
                        .WithMany("TrainingCategoryImageLogos")
                        .HasForeignKey("ImageLogoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SFIDWebAPI.Domain.Entities.ImageGallery", "ImageThumbnail")
                        .WithMany("TrainingCategoryImageThumbnails")
                        .HasForeignKey("ImageThumbnailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.TrainingMaterial", b =>
                {
                    b.HasOne("SFIDWebAPI.Domain.Entities.ImageGallery", "ImageCover")
                        .WithMany("TrainingMaterialImageCovers")
                        .HasForeignKey("ImageCoverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SFIDWebAPI.Domain.Entities.ImageGallery", "ImageThumbnail")
                        .WithMany("TrainingMaterialImageThumbnails")
                        .HasForeignKey("ImageThumbnailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SFIDWebAPI.Domain.Entities.TrainingCategory", "TrainingCategory")
                        .WithMany("TrainingMaterials")
                        .HasForeignKey("TrainingCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SFIDWebAPI.Domain.Entities.User", b =>
                {
                    b.HasOne("SFIDWebAPI.Domain.Entities.MasterConfig", "MasterConfig")
                        .WithMany("Users")
                        .HasForeignKey("MasterConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SFIDWebAPI.Domain.Entities.Salesman", "Salesman")
                        .WithOne("User")
                        .HasForeignKey("SFIDWebAPI.Domain.Entities.User", "UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
